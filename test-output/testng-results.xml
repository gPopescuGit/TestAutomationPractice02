<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-23T14:23:31 EET" name="ScenarioTestSuite" finished-at="2025-02-23T14:24:06 EET" duration-ms="34979">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.findProductDealTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" name="findProductDealTest" class="tests.SubmitOrderTest"/>
        <method signature="SubmitOrderTest.submitOrderAllProductsOnceTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" name="submitOrderAllProductsOnceTest" class="tests.SubmitOrderTest"/>
        <method signature="SubmitOrderTest.submitOrderNoPromoCodeTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" name="submitOrderNoPromoCodeTest" class="tests.SubmitOrderTest"/>
        <method signature="SubmitOrderTest.submitOrderSearchProductTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" name="submitOrderSearchProductTest" class="tests.SubmitOrderTest"/>
        <method signature="SubmitOrderTest.submitOrderWithPromoCodeTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" name="submitOrderWithPromoCodeTest" class="tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-02-23T14:23:31 EET" name="SubmitPurchase" finished-at="2025-02-23T14:24:06 EET" duration-ms="34979">
      <class name="tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:31 EET" name="launchApplication" finished-at="2025-02-23T14:23:34 EET" duration-ms="3367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="findProductDealTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:34 EET" name="findProductDealTest" finished-at="2025-02-23T14:23:35 EET" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findProductDealTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:35 EET" name="tearDown" finished-at="2025-02-23T14:23:35 EET" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:35 EET" name="launchApplication" finished-at="2025-02-23T14:23:39 EET" duration-ms="3496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderAllProductsOnceTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:39 EET" name="submitOrderAllProductsOnceTest" finished-at="2025-02-23T14:23:43 EET" duration-ms="3862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderAllProductsOnceTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:43 EET" name="tearDown" finished-at="2025-02-23T14:23:43 EET" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:43 EET" name="launchApplication" finished-at="2025-02-23T14:23:47 EET" duration-ms="3398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderNoPromoCodeTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:47 EET" name="submitOrderNoPromoCodeTest" finished-at="2025-02-23T14:23:49 EET" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderNoPromoCodeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:49 EET" name="tearDown" finished-at="2025-02-23T14:23:49 EET" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:49 EET" name="launchApplication" finished-at="2025-02-23T14:23:53 EET" duration-ms="3482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderSearchProductTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:53 EET" name="submitOrderSearchProductTest" finished-at="2025-02-23T14:23:54 EET" duration-ms="1148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderSearchProductTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:54 EET" name="tearDown" finished-at="2025-02-23T14:23:55 EET" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:55 EET" name="launchApplication" finished-at="2025-02-23T14:23:58 EET" duration-ms="3362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderWithPromoCodeTest()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:23:58 EET" name="submitOrderWithPromoCodeTest" finished-at="2025-02-23T14:24:05 EET" duration-ms="7353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderWithPromoCodeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@15f47664]" started-at="2025-02-23T14:24:05 EET" name="tearDown" finished-at="2025-02-23T14:24:06 EET" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SubmitOrderTest -->
    </test> <!-- SubmitPurchase -->
  </suite> <!-- ScenarioTestSuite -->
  <suite started-at="2025-02-23T14:24:06 EET" name="MasterSuite" finished-at="2025-02-23T14:24:06 EET" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- MasterSuite -->
  <suite started-at="2025-02-23T14:23:15 EET" name="ErrorValidationTestSuite" finished-at="2025-02-23T14:23:31 EET" duration-ms="15669">
    <groups>
      <group name="ErrorHandling">
        <method signature="CountryPageErrorValidation.submitOrderWithoutCountryTest()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" name="submitOrderWithoutCountryTest" class="errorValidationTests.CountryPageErrorValidation"/>
        <method signature="CountryPageErrorValidation.submitOrderWithoutTermsAndConditionsTest()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" name="submitOrderWithoutTermsAndConditionsTest" class="errorValidationTests.CountryPageErrorValidation"/>
        <method signature="LandingPageErrorValidation.AttemptCheckoutWithoutProduct()[pri:0, instance:errorValidationTests.LandingPageErrorValidation@50f6ac94]" name="AttemptCheckoutWithoutProduct" class="errorValidationTests.LandingPageErrorValidation"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2025-02-23T14:23:15 EET" name="ErrorValidation" finished-at="2025-02-23T14:23:31 EET" duration-ms="15669">
      <class name="errorValidationTests.LandingPageErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:errorValidationTests.LandingPageErrorValidation@50f6ac94]" started-at="2025-02-23T14:23:26 EET" name="launchApplication" finished-at="2025-02-23T14:23:30 EET" duration-ms="3522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="AttemptCheckoutWithoutProduct()[pri:0, instance:errorValidationTests.LandingPageErrorValidation@50f6ac94]" started-at="2025-02-23T14:23:30 EET" name="AttemptCheckoutWithoutProduct" finished-at="2025-02-23T14:23:30 EET" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AttemptCheckoutWithoutProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:errorValidationTests.LandingPageErrorValidation@50f6ac94]" started-at="2025-02-23T14:23:30 EET" name="tearDown" finished-at="2025-02-23T14:23:31 EET" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- errorValidationTests.LandingPageErrorValidation -->
      <class name="errorValidationTests.CountryPageErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" started-at="2025-02-23T14:23:15 EET" name="launchApplication" finished-at="2025-02-23T14:23:19 EET" duration-ms="4004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderWithoutCountryTest()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" started-at="2025-02-23T14:23:19 EET" name="submitOrderWithoutCountryTest" finished-at="2025-02-23T14:23:20 EET" duration-ms="1189" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Terms and conditions or Country to are selected when neither of them was expected expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Terms and conditions or Country to are selected when neither of them was expected expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at errorValidationTests.CountryPageErrorValidation.submitOrderWithoutCountryTest(CountryPageErrorValidation.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderWithoutCountryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" started-at="2025-02-23T14:23:20 EET" name="tearDown" finished-at="2025-02-23T14:23:21 EET" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" started-at="2025-02-23T14:23:21 EET" name="launchApplication" finished-at="2025-02-23T14:23:24 EET" duration-ms="3503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderWithoutTermsAndConditionsTest()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" started-at="2025-02-23T14:23:24 EET" name="submitOrderWithoutTermsAndConditionsTest" finished-at="2025-02-23T14:23:26 EET" duration-ms="1506" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected Terms and conditions to NOT be selected expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected Terms and conditions to NOT be selected expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at errorValidationTests.CountryPageErrorValidation.submitOrderWithoutTermsAndConditionsTest(CountryPageErrorValidation.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderWithoutTermsAndConditionsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:errorValidationTests.CountryPageErrorValidation@700fb871]" started-at="2025-02-23T14:23:26 EET" name="tearDown" finished-at="2025-02-23T14:23:26 EET" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- errorValidationTests.CountryPageErrorValidation -->
    </test> <!-- ErrorValidation -->
  </suite> <!-- ErrorValidationTestSuite -->
</testng-results>
